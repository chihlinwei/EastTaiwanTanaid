knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# library(devtools)
# install_github('AnneChao/iNEXT.3D')
## import packages
library(iNEXT.3D)
library(readxl)
library(reshape2)
library(doBy)
library(dplyr)
library(plyr)
library(stringr)
library(ggplot2)
library(vegan)
library(ggdendro)
library(patchwork)
large <- theme(legend.title = element_text(size=15),
legend.text = element_text(size=15),
axis.title = element_text(size=15),
axis.text = element_text(size=15),
strip.text = element_text(size=15))
rotate <- theme(axis.text.x = element_text(angle = 90, hjust=1))
no_strip <- theme(strip.background = element_rect(colour=NA, fill=NA),
strip.text = element_text(colour=NA))
ta0 <- read_excel("../Data/Tanaidacea community.xlsx", sheet = 3)
ta <- ta0[, 1:2]
# Create factor "Microhabitat"
ta$Microhabitat <- str_replace(ta0$Microhabitat, " \\s*\\([^\\)]+\\)", "")
# Create factor "Replicate"
ta$Replicate <- str_extract(ta0$Microhabitat, "(?<=\\()\\d+(?=\\))")
ta <- cbind(ta, ta0[,-1:-3])
# Remove zero rows
ta <- ta[rowSums(ta0[,-1:-3])!=0, ]
ta$Site <- factor(ta$Site, levels=c("Shitiping", "Jihuei", "Jialulan"), labels = c("STP", "JH", "JLL"))
ta$Season <- factor(ta$Season, levels = c("SP", "SU"), labels = c("AP", "AU"))
# Only keep data for analysis
b <- ta[, -1:-4]
rownames(b) <- with(ta, paste(Site, Season, Microhabitat, Replicate, sep="_"))
library(rjson)
library(dplyr)
cwb <-  fromJSON(file="../Data/C-B0050-001.json")
# Meta data
meta <- lapply(cwb$cwbdata$Resources$Resource$Data$SeaSurfaceObs$Location, FUN=function(x)x[[1]])
# Monthly temperature
dat <- lapply(cwb$cwbdata$Resources$Resource$Data$SeaSurfaceObs$Location, FUN=function(x)x[[2]]$Monthly)
MonthlyTemperatureFun <- function(i){
cbind(StationNameEN = lapply(meta, FUN=function(x)x$StationNameEN)[i] %>% as.character %>% as.factor,
cbind(
StationLatitude=lapply(meta, FUN=function(x)x$StationLatitude)[i] %>% as.numeric,
StationLongitude=lapply(meta, FUN=function(x)x$StationLongitude)[i] %>% as.numeric,
DataMonth=lapply(dat[[i]], FUN=function(x)x$DataMonth) %>% unlist %>% as.numeric,
Maximum=lapply(dat[[i]], FUN=function(x)x$SeaTemperature$Maximum) %>% unlist %>% as.numeric,
MaximumYear=lapply(dat[[i]], FUN=function(x)x$SeaTemperature$MaximumYear) %>% unlist %>% as.numeric,
Mean=lapply(dat[[i]], FUN=function(x)x$SeaTemperature$Mean) %>% unlist %>% as.numeric,
Minimum=lapply(dat[[i]], FUN=function(x)x$SeaTemperature$Minimum) %>% unlist %>% as.numeric,
MinimumYear=lapply(dat[[i]], FUN=function(x)x$SeaTemperature$MinimumYear) %>% unlist %>% as.numeric,
MinimumAnomaly=lapply(dat[[i]], FUN=function(x)x$SeaTemperature$MinimumAnomaly) %>% unlist %>% as.numeric,
MaximumAnomaly=lapply(dat[[i]], FUN=function(x)x$SeaTemperature$MaximumAnomaly) %>% unlist %>% as.numeric,
MeanAnomaly=lapply(dat[[i]], FUN=function(x)x$SeaTemperature$MeanAnomaly) %>% unlist %>% as.numeric
) %>% as.data.frame
)
}
# Hualien Buoy
hb <- MonthlyTemperatureFun(18) %>% subset((DataMonth=="4"|DataMonth=="8") & MinimumYear == "2012" & MaximumYear == "2012")
# Chenggong
cg <- MonthlyTemperatureFun(8) %>% subset((DataMonth=="4"|DataMonth=="8") & MinimumYear == "2012" & MaximumYear == "2012")
# Taitung Buoy
tb <- MonthlyTemperatureFun(34) %>% subset((DataMonth=="4"|DataMonth=="8") & MinimumYear == "2012" & MaximumYear == "2012")
tmp <- rbind(hb, cg, tb)
ta2 <- aggregate(b, by = list(ta$Site, ta$Season), FUN=sum)
names(ta2)[1:2] <- c("Site", "Season")
b2 <- ta2[, -1:-2]
rownames(b2) <- with(ta2, paste(Site, Season, sep="_"))
load("../Data/HillNumbersTD.rda")
h <- rbind(q0$iNextEst$size_based,
q1$iNextEst$size_based,
q2$iNextEst$size_based)
h <- cbind(h, ta2[match(h$Assemblage, rownames(b2)), 1:2])
h$Season <- factor(h$Season, labels=c("SP", "SU"))
# Minimum sample coverage for each order q
min(ldply(lapply(splitBy(~Order.q+Assemblage, subset(h, Order.q==0)), FUN=function(x)x[dim(x)[1],]))$SC)
min(ldply(lapply(splitBy(~Order.q+Assemblage, subset(h, Order.q==1)), FUN=function(x)x[dim(x)[1],]))$SC)
min(ldply(lapply(splitBy(~Order.q+Assemblage, subset(h, Order.q==2)), FUN=function(x)x[dim(x)[1],]))$SC)
# SC = 0.99
h1 <- subset(h, Order.q ==0 & SC <= 0.9957578)
p1 <- ggplot()+
geom_ribbon(data=h1,
aes(x=m, ymin=qD.LCL, ymax=qD.UCL, group=Assemblage, fill=Site), alpha=0.2)+
geom_line(data= subset(h1, Method=="Rarefaction"),
aes(x=m, y=qD, group=Assemblage, colour=Site), size=0.8)+
geom_line(data= subset(h1, Method=="Extrapolation"),
aes(x=m, y=qD, group=Assemblage, colour=Site), linetype=2, size=0.8)+
geom_point(data= subset(h1, Method=="Observed"),
aes(x=m, y=qD, group=Assemblage))+
scale_fill_viridis_d()+
scale_color_viridis_d()+
facet_wrap(~Season, scale="free")+
labs(x = "Numbers of Individuals", y = expression(Species~Richness~(""^0*italic(D))),
colour="Site")+
theme_bw()%+replace% large %+replace% theme(axis.text.x = element_blank(), axis.title.x = element_blank())
h2 <- subset(h, Order.q ==1 & SC <= 0.9957578)
p2 <- ggplot()+
geom_ribbon(data=h2,
aes(x=m, ymin=qD.LCL, ymax=qD.UCL, group=Assemblage, fill=Site), alpha=0.2)+
geom_line(data= subset(h2, Method=="Rarefaction"),
aes(x=m, y=qD, group=Assemblage, colour=Site), size=0.8)+
geom_line(data= subset(h2, Method=="Extrapolation"),
aes(x=m, y=qD, group=Assemblage, colour=Site), linetype=2, size=0.8)+
geom_point(data= subset(h2, Method=="Observed"),
aes(x=m, y=qD, group=Assemblage))+
scale_fill_viridis_d()+
scale_color_viridis_d()+
facet_wrap(~Season, scale="free")+
labs(x = "Numbers of Individuals", y = expression(Species~Richness~(""^1*italic(D))),
colour="Site")+
theme_bw()%+replace% large %+replace% theme(legend.position = "none")
p1/p2
p3 <- ggplot()+
geom_ribbon(data=h1,
aes(x=SC, ymin=qD.LCL, ymax=qD.UCL, group=Assemblage, fill=Site), alpha=0.2)+
geom_line(data= subset(h1, Method=="Rarefaction"),
aes(x=SC, y=qD, group=Assemblage, colour=Site), size=0.8)+
geom_line(data= subset(h1, Method=="Extrapolation"),
aes(x=SC, y=qD, group=Assemblage, colour=Site), linetype=2, size=0.8)+
geom_point(data= subset(h1, Method=="Observed"),
aes(x=SC, y=qD, group=Assemblage))+
scale_fill_viridis_d()+
scale_color_viridis_d()+
facet_wrap(~Season, scale="free")+
labs(x = "Sample Completeness", y = expression(Species~Richness~(""^0*italic(D))),
colour="Site")+
theme_bw()%+replace% large %+replace% theme(axis.text.x = element_blank(), axis.title.x = element_blank())
p4 <- ggplot()+
geom_ribbon(data=h2,
aes(x=SC, ymin=qD.LCL, ymax=qD.UCL, group=Assemblage, fill=Site), alpha=0.2)+
geom_line(data= subset(h2, Method=="Rarefaction"),
aes(x=SC, y=qD, group=Assemblage, colour=Site), size=0.8)+
geom_line(data= subset(h2, Method=="Extrapolation"),
aes(x=SC, y=qD, group=Assemblage, colour=Site), linetype=2, size=0.8)+
geom_point(data= subset(h2, Method=="Observed"),
aes(x=SC, y=qD, group=Assemblage))+
scale_fill_viridis_d()+
scale_color_viridis_d()+
facet_wrap(~Season, scale="free")+
labs(x = "Sample Completeness", y = expression(Species~Richness~(""^1*italic(D))),
colour="Site")+
theme_bw()%+replace% large %+replace% theme(legend.position = "none")
p3/p4
fr <- strsplit(q0$DataInfo$Assemblage, split="_") %>% ldply
names(fr) <- c("Site", "Season")
fr$Season <- factor(fr$Season, labels=c("SP", "SU"))
h1_out <- lapply(splitBy(~Assemblage, h1), FUN=function(x)tail(x, n=1)) %>% ldply
h2_out <- lapply(splitBy(~Assemblage, h2), FUN=function(x)tail(x, n=1)) %>% ldply
t0 <- cbind(cbind(fr, S.obs = q0$DataInfo$S.obs), tmp[c(1, 3, 5, 2, 4, 6),])
t0$Site <- factor(t0$Site, levels=c("STP", "JH", "JLL"))
t1 <- cbind(h1_out, tmp[c(1, 3, 5, 2, 4, 6),])
t2 <- cbind(h2_out, tmp[c(1, 3, 5, 2, 4, 6),])
h2 <- readRDS("../Data/H2.rds")
h2$Site <- factor(h2$Site, levels=c("STP", "JH", "JLL"))
pv <- round(summary(lm(S.obs~Mean, data=t0))$coefficients[2, 4], 3)
r2 <- round(summary(lm(S.obs~Mean, data=t0))$adj.r.squared, 3)
label = paste0("P==", pv, "*','~italic(R)^2 ==", r2)
p7 <- ggplot(data=t0, aes(x=Mean, y=S.obs, shape=Season, colour=Site))+
geom_point(size=2, stroke=1.5)+
stat_smooth(formula=y~x, method = "glm", aes(group=1), alpha=0.2, colour="gray", linetype=2)+
annotate(geom = "text", x = 25, y = 12.5, hjust = 0, vjust = 1, label = label, parse = TRUE) +
scale_color_viridis_d()+
scale_shape_manual(values=c(1,19))+
labs(x = expression(Temperature~(degree~C)), y = "Numbers of Species", title="A")+
theme_bw() %+replace% large %+replace% theme(axis.text.x = element_blank(), axis.title.x = element_blank(), legend.position = "none")
p7
